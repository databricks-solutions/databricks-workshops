# Databricks notebook source
# MAGIC %md
# MAGIC _**A NOTE before you begin...**_    
# MAGIC   
# MAGIC - You will need a cluster to run these lab notebooks in your workspace. While there is `no need to use MLRuntime` to run this set of notebooks, we recommend using a `Dedicated Access DBR 15.4LTS (32-64* GB Memory, 4-8 Cores; *preferred) or Serverless (choose 32Gigs Memory) with Unity Catalog (+ Photon) enabled`. 
# MAGIC - In this Lab folder, you will find five main notebooks prefixed with `0#_{}` e.g. `01--05_{}`. You can review and test them out and/or use them as reference. Accompanying them is a **`./utils.py`** file which includes _**`helper-functions`**_ that will be used within the notebooks to ease the walkthrough without overburdening the eyes with code. We also included `[Example] AI Gateway Dashboard` for easier jumpstart. Additional assets are also found in `./imgs`, `./gif`.
# MAGIC - As you follow along the **AI-Gateway Lab Overview**, you will be guided with options to use the _User Interface_ (**UI**) or to programmatically use the example code provided in the **Notebooks** to create and update Foundational **Model Serving** endpoint(s) and enable various aspect of the **AI Gateway**. You are welcome to start with the UI before moving onto the code, to first familiarize yourself with the Serving endpoints API.  
# MAGIC - When you are done testing you can use notebook [**`06_AIGateway_Lab_Cleanup`**]($./06_AIGateway_Lab_Cleanup) to remove the endpoint(s) and corresponding payload table(s) or manually delete the assets to prevent unwanted costs.
# MAGIC ----------     

# COMMAND ----------

# MAGIC %md
# MAGIC ## AI-Gateway Lab 🧪🧫🔬 Overview
# MAGIC You are working with a customer who has prioritized a number of AI Agent System use cases in 2025. They want to be able to innovate quickly, leverage the latest innovations from model providers like OpenAI, Anthropic, Google AI etc. as well as the open source community. They also want to maintain control around costs and quality of their applications, not to mention governance and safety of the agents’ output.
# MAGIC Let’s look at the challenges expressed by the customer's Platform and Development teams, and how you can help address them.
# MAGIC - __Platform team__
# MAGIC   - Drive innovation via state-of-the-art models 
# MAGIC   - Enforce proper access control
# MAGIC   - Monitor usage & set policies for cost control
# MAGIC   - Audit data from model usage
# MAGIC   - Provide reliable model access for high amounts of traffic
# MAGIC - __Development team__
# MAGIC   - Build a feedback loop to improve application quality
# MAGIC   - Safeguard model responses, prevent transmission of sensitive data
# MAGIC   - Run A/B tests to determine the right model for the right task
# MAGIC

# COMMAND ----------

# MAGIC %md
# MAGIC ## 🚀 Enable innovation
# MAGIC #### Platform team:
# MAGIC > I want to enable innovation by providing access new state-of-the-art models
# MAGIC ### Solution
# MAGIC   - Create multiple serving endpoints for different LLMs
# MAGIC   
# MAGIC   - Govern them with AI Gateway
# MAGIC   
# MAGIC   - Provide a standard query interface across models from different providers
# MAGIC #### Notebook
# MAGIC   - [01_ModelServing_CreateEndpoints]($./01_ModelServing_CreateEndpoints)
# MAGIC #### UI
# MAGIC   <br>
# MAGIC   <img src="./gif/01_Enable innovation.gif" width="640">
# MAGIC

# COMMAND ----------

# MAGIC %md
# MAGIC ## 🔐 Enforce proper access control
# MAGIC #### Platform team:
# MAGIC > I want to enforce proper access control to models, granting access only to authorized users
# MAGIC >
# MAGIC > I want to enforce proper access control to data generated by the Gateway
# MAGIC ### Solution
# MAGIC   - Assign permissions to use the models endpoints
# MAGIC   - Use Unity Catalog to govern access to data generated by the Gateway
# MAGIC #### UI
# MAGIC   <br>
# MAGIC   <img src="./gif/02_Enforce access control.gif" width="640">
# MAGIC

# COMMAND ----------

# MAGIC %md
# MAGIC ## 📊 Monitor and audit usage
# MAGIC #### Platform team:  
# MAGIC   
# MAGIC > I want to monitor usage to inform usage policies for cost control
# MAGIC >
# MAGIC > I want to perform audits on model usage
# MAGIC ### Solution
# MAGIC   
# MAGIC   - Utilize pre-built template dashboards to monitor and audit the usage of AI models, ensuring transparency and accountability.
# MAGIC   - Begin with our [starter pre-built template dashboard](https://github.com/mingyu89/ai-gateway/blob/main/%5BExample%5D%20AI%20Gateway%20Dashboard.lvdash.json) (Also available in Lab assets folder.) 
# MAGIC   - Set up [SQL Alerts](https://docs.databricks.com/aws/en/sql/user/alerts) where needed. 
# MAGIC #### UI
# MAGIC   <br>
# MAGIC   <img src="./gif/03_Monitor usage.gif" width="640">
# MAGIC

# COMMAND ----------

# MAGIC %md
# MAGIC ## 🔄 Enable feedback loop to improve quality
# MAGIC   
# MAGIC #### Development team:
# MAGIC > I want to enable a feedback loop to capture model responses to improve the quality of my application
# MAGIC ### Solution
# MAGIC   - Log the model’s payload as an Inference Table in Unity Catalog
# MAGIC   - Evaluate the model’s responses with SMEs or LLM judges to identify areas to improve
# MAGIC   - Query the logged payload for insights to understand how the endpoint is used, how often it’s used
# MAGIC   - Analyze the model’s input/response to determine if guardrails need to be set
# MAGIC #### Notebook
# MAGIC   - [02_AIGateway_Enable_UsageInference]($./02_AIGateway_Enable_UsageInference)
# MAGIC #### UI
# MAGIC   <br>
# MAGIC   <img src="./gif/05_Enable feedback loop.gif" width="640">
# MAGIC

# COMMAND ----------

# MAGIC %md
# MAGIC ## 💰 Control costs, prevent cost overruns
# MAGIC #### Platform team:
# MAGIC > I want to control costs and prevent cost overruns while the dev team is prototyping
# MAGIC >
# MAGIC > I want to prevent users from sending a billion records to OpenAI, potentially breaking other apps using the API
# MAGIC ### Solution
# MAGIC   - Set rate limits on an endpoint to cap usage
# MAGIC   - Set rate limits per user to avoid excessive one-time use
# MAGIC #### Notebook
# MAGIC   - [03_AIGateway_Enable_RateLimits]($./03_AIGateway_Enable_RateLimits)
# MAGIC #### UI
# MAGIC   <br>
# MAGIC   <img src="./gif/04_Control costs Prevent cost overruns.gif" width="640">
# MAGIC

# COMMAND ----------

# MAGIC %md
# MAGIC ## 🛡️ Safeguard model responses
# MAGIC #### Developemnt team:
# MAGIC > I want to safeguard model responses, ensure that responses given by the model are safe
# MAGIC ### Solution
# MAGIC   - Detect and block unsafe content
# MAGIC   - Block inappropriate keywords with Guardrails
# MAGIC #### UI
# MAGIC   <br>
# MAGIC   <img src="./gif/06_Safeguard model responses.gif" width="640">
# MAGIC

# COMMAND ----------

# MAGIC %md
# MAGIC ## 🔒 Prevent transmission of sensitive data
# MAGIC #### Development team:
# MAGIC > I want to prevent transmission of sensitive data
# MAGIC >
# MAGIC > I want to prevent agent users to send PII data to OpenAI
# MAGIC ### Solution
# MAGIC   - Block inappropriate keywords with guardrails
# MAGIC   
# MAGIC   - Block PII with Guardrails
# MAGIC #### Notebook
# MAGIC   - [04_AIGateway_Enable_Guardrails]($./04_AIGateway_Enable_Guardrails)
# MAGIC #### UI
# MAGIC   <br>
# MAGIC   <img src="./gif/07_Prevent transmission of sensitve data.gif" width="640">
# MAGIC

# COMMAND ----------

# MAGIC %md
# MAGIC ## 🔀 Run A/B tests
# MAGIC #### Development team:
# MAGIC > I want to run A/B tests to determine the right model for the right task
# MAGIC ### Solution
# MAGIC   
# MAGIC   - Split traffic to an endpoint across two models
# MAGIC   - Use logged payload to evaluate the responses of each model to make informed decision about switching from one model to another
# MAGIC #### Notebook
# MAGIC   - [05_AIGateway_Enable_ABTest]($./05_AIGateway_Enable_ABTest)
# MAGIC #### UI
# MAGIC   <br>
# MAGIC   <img src="./gif/08_Run AB tests.gif" width="640">
# MAGIC   

# COMMAND ----------

# MAGIC %md
# MAGIC ## ⚖️ Load balance
# MAGIC #### Platform team:
# MAGIC > I want to load balance across 2 Azure regions for the same `external` model so to ensure maximum uptime for the endpoint
# MAGIC ### Solution
# MAGIC   - Split traffic to an endpoint across two models
# MAGIC #### UI
# MAGIC   - Follow the same steps to set up traffic splitting as you did for A/B testing, but selecting 2 external models instead.
# MAGIC

# COMMAND ----------

# MAGIC %md
# MAGIC ---   
# MAGIC _`This lab was developed for the FY26 Technical Kickoff held on the week of March 10, 2025`_ 
# MAGIC
# MAGIC ---   
